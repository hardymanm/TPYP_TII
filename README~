Updated on 11/7/2017 [Tested on Ubuntu 14.04 and Ubuntu 17.04

To compile the code you need to download the open source GSL library from  ftp://ftp.gnu.org/gnu/gsl/gsl-latest.tar.gz (For Linux).
Once you downloaded the file in a folder, you need to compile the GSL library using the command below:

1.
********************************************************
./configure --prefix=/path_the_gsl_library_files_located

If you have downloaded the gsl file and extracted the files in folder /home/user/Documents/gsl then you need to type the command 
cd /home/user/Documents/gsl and run the configure command below

your configure command would look something like this  

./configure --prefix=/home/user/Documents/gsl
***********************************************************
2. type the command 'make' in the folder /home/user/Documents/gsl. If you are not sure where you are currently, you can type the command 'pwd' to check 
whether you are in the correct folder or not. If your 'make' command is successful, you can use your gsl library now.

***********************************************************
3. Compile the Differential Topic Models (TPYP_TII) 

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH=:/you gsl/lib

in above case it would be something like this ==>  export LD_LIBRARY_PATH=$LD_LIBRARY_PATH=:/home/user/Documents/gsl/lib

then your next step is to extract the TPYP_TII and go to the folder. For example if you extracted the TPYP_TII in folder /home/user/Documents/TPYP_TII
you need to type ==> cd /home/user/Documents/TPYP_TII. then run the 'make' command to compile the program. If anything wrong during the compilation you need to modified the Makefile supplied with the code like below:

####### TI sampler, IP ###########
CFLAGS = -Wall -I/home/user/Documents/gsl/include -L/home/user/Documents/gsl/lib -O3 -DFL -DIP -DHAVE_INLINE -DGSL_RANGE_CHECK_OFF # sample only b


**********************************************************
4. To run the program you can use the commmand 

./spyp -est -v '/home/user/Documents/TPYP_TII/vocab2.vo'  -t '/home/user/Documents/TPYP_TII/' -s '/home/user/Documents/TPYP_TII/tr_setting.txt'

The output result is in the TPYP_TII folder where you extracted the code.

*******************************************************


The code is based on the open source GSL library, it implements the model with *identity transformation matrices* in the following paper:

Changyou Chen, Wray Buntine, Nan Ding, Lexing Xie, and Lan Du.
Differential Topic Models
IEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE (TPAMI), 2014

The code is in the beta version where there are a lot of unused functions defined in the code (these were used when doing the experiments in the paper, the user should ignore these functions), and the format is not nice to look. It was tested in Ubuntu system. To run the code, you need to specify the following files:

1. tr_setting.txt

Example format (need to delete the parenthesis and the content inside):

=================================
I: 3 (the number of groups)
gamma: 0.100000 (Dirichlet hyperparameter for the topic-word distribution)
train percent: 0.8 (percentage of data used for training)
gibbs max iter: 1000 (number of Gibbs iterations)
burn in: 899 (burn in)
sampling lag: 10 (sampling lag)
K_i: 10 (number of topics)
W_i: 0 (leave it to *0*)
a: 0.700000 (a parameter for the PDP, 0 < a < 1)
b: 10 (b parameter for the PDP, b > 0)
alpha: 0.1 (Dirichlet hyperparameter for the topic distribution)
top words: 50 (number of top words to print topics)
train files: icml.txtlst jmlr.txtlst tp.txtlst (training files)
==================================

2. training files:

Example format (need to delete the parenthesis and the content inside):

===============================================
doc:1 (same for the beginning of each document)
para:3 (number of words in this document)
word:0 (first word index, starting from 0)
word:1 (second word index)
word:2 (third word index)
doc:1 (another document)
para:2
word:1
word:1
================================================

3. Vocabulary file:

Example format (need to delete the parenthesis and the content inside):

================================================
0:I (the first word is *I*)
1:you (the second word is *you*)
================================================

After creating these files, you need to specify their corresponding paths in the *Makefile*.
